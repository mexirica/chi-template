services:
  app:
    container_name: app
    build:
      context: ..
      dockerfile: deploy/Dockerfile
    env_file:
      - ./.env
    depends_on:
      - postgres
      - redis
      - otel-collector
    labels: { logging: "promtail" }
    ports:
      - "8081:8081"
    networks:
      - monitor-net

  postgres:
    container_name: postgres
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: app_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - monitor-net
      
  redis:
    container_name: redis
    image: redis:7
    ports:
      - "6379:6379"
    networks:
      - monitor-net

  loki:
    container_name: loki
    image: grafana/loki:3.3.2
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki_data:/loki
    ports:
      - "3100:3100"
    networks:
      - monitor-net

  promtail:
    container_name: promtail
    image: grafana/promtail:3.3.2
    command: -config.file=/etc/promtail/config.yaml
    volumes:
      - ./promtail/config.yaml:/etc/promtail/config.yaml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on: [loki]
    networks:
      - monitor-net

  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    ports:
      - "3200:3200"    
    volumes:
      - ./tempo/tempo-config.yaml:/etc/tempo.yaml
      - tempo_data:/var/tempo
    command: [ "-config.file=/etc/tempo.yaml" ]
    networks:
      - monitor-net

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.99.0
    container_name: otelcol
    command: ["--config=/etc/otelcol/config.yaml"]
    volumes:
      - ./otelcol/config.yaml:/etc/otelcol/config.yaml
    ports:
      - "4317:4317"
      - "4318:4318"
    depends_on:
      - tempo
    networks:
      - monitor-net      

  prometheus:
      image: prom/prometheus:v2.45.0
      container_name: prometheus
      volumes:
        - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
        - prometheus_data:/prometheus
      command:
        - '--config.file=/etc/prometheus/prometheus.yml'
        - '--storage.tsdb.path=/prometheus'
        - '--web.console.libraries=/etc/prometheus/console_libraries'
        - '--web.console.templates=/etc/prometheus/consoles'
        - '--storage.tsdb.retention.time=200h'
        - '--web.enable-lifecycle'
      restart: unless-stopped
      ports:
        - 9090:9000
      labels:
        org.label-schema.group: "monitoring"
      networks:
        - monitor-net

  influxdb:
    image: influxdb:1.8.1
    container_name: influxdb
    restart: always
    environment:
      - INFLUXDB_DB=influx
      - INFLUXDB_ADMIN_USER=${INFLUX_ADMIN_USER:-admin}
      - INFLUXDB_ADMIN_PASSWORD=${INFLUX_ADMIN_PASSWORD:-admin}
    ports:
      - '8086:8086'
    volumes:
      - ./influxdb/data:/var/lib/influxdb
      - ./influxdb/influxdb.conf:/etc/influxdb/influxdb.conf
    labels:
      org.label-schema.group: "monitoring"
    networks:
      - monitor-net

  nodeexporter:
    image: prom/node-exporter:v1.6.0
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    ports:
      - 9100:9100
    labels:
      org.label-schema.group: "monitoring"
    networks:
      - monitor-net

      
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.1
    container_name: cadvisor
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
    restart: unless-stopped
    ports:
      - 8080:8080
    labels:
      org.label-schema.group: "monitoring"
    networks:
      - monitor-net
      
  grafana:
    image: grafana/grafana:10.0.1
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    ports:
      - 3000:3000
    labels:
      org.label-schema.group: "monitoring"
    networks:
      - monitor-net
      
  pushgateway:
    image: prom/pushgateway:v1.6.0
    container_name: pushgateway
    restart: unless-stopped
    ports:
      - 9091:9091
    labels:
      org.label-schema.group: "monitoring"
    networks:
      - monitor-net
      
networks:
  monitor-net:
    driver: bridge

volumes:
  pgdata:
  tempo_data:
  loki_data:
  prometheus_data:
  influxdb_data:
  grafana_data:
