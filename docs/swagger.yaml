basePath: /
definitions:
  models.CreateMovieRequest:
    properties:
      description:
        type: string
      director:
        type: string
      genre:
        items:
          type: string
        type: array
      rating:
        type: number
      release_year:
        type: integer
      title:
        type: string
    required:
    - description
    - director
    - genre
    - rating
    - release_year
    - title
    type: object
  models.GetMovieList:
    properties:
      movies:
        items:
          $ref: '#/definitions/models.GetMovieResponse'
        type: array
    type: object
  models.GetMovieResponse:
    properties:
      description:
        type: string
      director:
        type: string
      genre:
        items:
          type: string
        type: array
      id:
        type: integer
      rating:
        type: number
      release_year:
        type: integer
      title:
        type: string
    type: object
  types.JsonResponse:
    properties:
      data: {}
      error:
        type: boolean
      message:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@localhost:6000
    name: API Support
    url: http://www.localhost:6000/support
  description: This is a sample server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://localhost:6000/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /movies:
    get:
      description: Get a paginated list of movies
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetMovieList'
      summary: List movies
      tags:
      - movies
    post:
      consumes:
      - application/json
      description: Create a new movie with the provided details
      parameters:
      - description: Movie to create
        in: body
        name: movie
        required: true
        schema:
          $ref: '#/definitions/models.CreateMovieRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.GetMovieResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.JsonResponse'
      summary: Create a new movie
      tags:
      - movies
  /movies/{id}:
    delete:
      description: Delete a movie by ID
      parameters:
      - description: Movie ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/types.JsonResponse'
      summary: Delete a movie
      tags:
      - movies
    get:
      description: Get details of a movie by its ID
      parameters:
      - description: Movie ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetMovieResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/types.JsonResponse'
      summary: Get a movie by ID
      tags:
      - movies
swagger: "2.0"
